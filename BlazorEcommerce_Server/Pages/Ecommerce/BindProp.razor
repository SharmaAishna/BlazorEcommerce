@page "/Ecommerce/BindProp"

<div class="row">
    <h2 class="text-success">Individual Product</h2>
    <div class="col-6 border p-3">
        <h3 class="text-primary">Product Summary</h3><hr />

        <div>
            Active:
            <input type="checkbox" @bind-value="@product.IsActive" checked="@(product.IsActive?"checked":null)" /><br />
        </div>
        <div>
            Price:
            <input type="number" @bind-value="@product.Price" @bind-value:event="oninput" /><br />

        </div>

        <div>
            Product Properties:
            <select @bind="selectedProp">
                @foreach (var prop in product.ProductProperties)
                {
                    <option value="@prop.Key">@prop.Key</option>
                }
            </select>
        </div>

    </div>

    <div class="col-6 border p-3">
        <h3 class="text-primary">Product Playground</h3><hr />
        Name: @product.Name<br />
        Active: @product.IsActive<br />
        Price: @product.Price<br />
        This Product is : @(product.IsActive ? "Active" : "InActive")<br />
        Property selected: @selectedProp<br />
        @if (!String.IsNullOrWhiteSpace(selectedProp))
        {
            <p>Property Value: @product.ProductProperties.FirstOrDefault(u=>u.Key==selectedProp).Value</p>
        }
    </div>



<div class="col-12 pt-4">
    <h2 class="text-success">Product Table</h2>
    <table class="table table-striped">
        <tbody>
                @foreach(var prod in products)
                {
                    <tr>
                        <td class="p-3"> <input type="text" @bind-value="@prod.Name" @bind-value:event="oninput"/></td>
                        <td class="p-3"><input type="number" @bind-value="@prod.Price" @bind-value:event="oninput" /></td>
                        <td class="p-3"><input type="checkbox" @bind-value="@prod.IsActive" checked="@(prod.IsActive?"checked":null)" /></td>
                    </tr>
                }
            </tbody>
    </table>
</div>
<div>
    <h2>Product Summary</h2>
    @foreach (var prop in products)
    {
            <p>
                @prop.Name
                [@prop.Price] is @(prop.IsActive ? "Active" : "InActive");
            </p>
        }

</div>
</div>
@code {
    private string selectedProp = "";
    Products product = new()
        {
            Id = 1,
            Name = "Rose Candle",
            IsActive = true,
            Price = 10.99,
            ProductProperties = new List<ProductProp>()
        {
            new ProductProp{Id=1, Key="color", Value="Black"},
             new ProductProp{Id=1, Key="flavor", Value="Rose Jasmine"},
              new ProductProp{Id=1, Key="size", Value="20oz"}
        }
        };
    List<Products> products = new();
    protected override void OnInitialized()
    {
        products.Add(new()
            {
                Id = 1,
                Name = "Midnight Blaze",
                IsActive = false,
                Price = 10.99,
                ProductProperties = new()
                {
                new ProductProp { Id = 1, Key = "Flavor", Value = "Rose"},
                     new ProductProp { Id = 2, Key = "Size", Value = "20oz"},
                    new ProductProp { Id = 3, Key = "Color", Value="Purple" }
                }
            });

        products.Add(new()
            {
                Id = 2,
                Name = "Blossom Lily",
                IsActive = true,
                Price = 12.39,
                ProductProperties = new()
            {
                new ProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
                new ProductProp { Id = 2, Key = "Size", Value = "18oz" },
                new ProductProp {Id = 3,Key = "Color",Value = "White"}
            }
            });
    }
}
